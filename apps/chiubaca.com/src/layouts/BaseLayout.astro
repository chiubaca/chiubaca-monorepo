---
import { ClientRouter } from "astro:transitions";

import AnimatedTypingTitle from "../components/AnimatedTypingTitle.astro";
import "../styles/global.css";

type BreadCrumb = { href: string; label: string };

interface Props {
  titlePrefix?: string;
  title?: string;
  breadcrumbs?: BreadCrumb[];
}
const { titlePrefix, title, breadcrumbs } = Astro.props;

const bio = `Hey I'm Alex ðŸ‘‹. I'm a senior software engineer based in London. 
This is my digital garden ðŸŒ± for publishing occasional musings about web development, 
life and other ramblings.`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="chiubaca" />
    <link rel="manifest" href="/site.webmanifest" />
    <slot name="head" />
    <title>{title && `${title} | chiubaca.com`}</title>
    <ClientRouter />
  </head>

  <body>
    <header
      class="flex items-center justify-between sticky top-0 backdrop-blur-lg decoration-2 z-10"
    >
      <nav class="font-mono text-xs sm:text-sm">
        {
          breadcrumbs && (
            <div class="flex flex-wrap break-after-avoid items-center gap-[1ch] py-2 pl-5">
              <a href="/" class="hover:rotate-10">
                <svg
                  width="15"
                  height="14"
                  viewBox="0 0 21 26"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  transition:name="bear-icon"
                  transition:animate="slide"
                >
                  <path
                    d="M4.21307 0.0442645C4.24477 0.0403416 4.27623 0.0349484 4.30817 0.0327417C6.57452 -0.122164 7.71412 1.281 9.26689 2.61409C9.47275 2.79083 9.75961 2.85774 9.99948 2.73097C10.1131 2.67103 10.2434 2.63768 10.3666 2.67412C10.3763 2.67699 10.3858 2.67997 10.3951 2.68308C10.7964 2.81723 11.1976 2.85509 11.525 2.58692C11.5992 2.5261 11.6782 2.47374 11.7635 2.43454C12.7107 1.9991 13.3264 1.20888 14.1929 0.636134C15.1881 -0.0219342 16.3255 -0.0950008 17.4589 0.170776C18.4915 0.413261 19.6633 0.798196 20.2226 1.79511C21.0099 3.19853 21.0195 18.2017 20.5 20.1163C19.9767 22.0452 18.7891 23.7401 17.0511 24.6951C16.7122 24.8814 16.3083 25.0894 15.9176 25.0906C15.7371 25.0912 15.601 24.947 15.5481 24.7745C15.4239 24.2463 14.9327 24.0525 14.4917 24.3687C14.0631 24.676 13.5392 25.1201 13.0801 25.5C12.6159 25.8841 11.9575 25.7717 11.6134 25.2772C11.1816 24.6567 10.2786 24.6227 9.82036 25.224C9.4724 25.6805 8.83445 25.8075 8.36711 25.4741C7.87734 25.1248 7.42044 24.7477 6.97051 24.3453C6.6104 24.0233 6.04095 24.1802 5.93361 24.6512C5.84841 25.025 5.45814 25.2454 5.10451 25.0973C4.58788 24.881 4.0998 24.6224 3.6326 24.2842C2.01032 23.11 0.60538 21.0737 0.271557 19.0628C-0.068269 17.015 -0.125908 2.86091 0.952651 1.45504C1.69114 0.492456 3.09536 0.230848 4.21307 0.0442645Z"
                    fill="#C38B32"
                  />
                  <path
                    d="M9.99997 14.5C10.5 14.5 11.1719 14.7148 12 15.1093C11.2224 15.5086 10.935 17.0605 10.935 17.0605C10.935 17.0605 10.6106 17.7845 10.7376 18.2653C11.4295 18.8834 13.0001 18.5 13.0001 18.5L13.5001 18.2741C13.3961 18.5048 13.0823 19.0636 12.8474 19.1864C11.978 19.6413 11.1766 19.6368 10.2597 19.3914C9.90978 19.4316 9.55747 19.4677 9.20515 19.4785C8.06031 19.5135 7.53748 19.0234 6.75144 18.2741C7.43253 18.3759 8.27574 18.5929 8.95683 18.4796C9.31275 18.4205 9.46837 18.3207 9.67635 18.026C9.71718 17.084 8.69409 15.9035 8.20176 15.1093C8.74789 14.8227 9.49994 14.5 9.99997 14.5Z"
                    fill="black"
                  />
                  <path
                    d="M13.5206 9.42428C13.65 9.44512 13.7804 9.46327 13.9082 9.49367C14.3047 9.58855 14.6181 9.8504 14.811 10.2125C15.0062 10.5793 15.0238 11.004 14.8974 11.397C14.7051 11.9955 14.3354 12.2966 13.8028 12.5722C13.7262 12.5582 13.6493 12.5459 13.5729 12.5302C13.1685 12.4466 12.8308 12.1848 12.6164 11.8253C12.3829 11.4318 12.3313 10.953 12.4756 10.5171C12.6603 9.94137 13.0054 9.67927 13.5206 9.42428Z"
                    fill="black"
                  />
                  <path
                    d="M6.47646 9.40443C6.91787 9.48902 7.30861 9.59813 7.61314 9.9507C7.86963 10.2476 7.96209 10.6215 7.91693 11.0082C7.84128 11.6586 7.42028 12.1242 6.93228 12.503C6.80956 12.4771 6.68612 12.453 6.56532 12.4189C6.12582 12.2949 5.77975 11.9867 5.56529 11.5802C5.37869 11.2266 5.34866 10.8302 5.46538 10.4482C5.63421 9.89651 6.00767 9.67806 6.47646 9.40443Z"
                    fill="black"
                  />
                </svg>
              </a>
              <span>/</span>
              {breadcrumbs.map((b) => (
                <span>
                  <a
                    href={b.href}
                    class="hover:opacity-75 break-keep hover:italic after:content-['/']"
                  >
                    {b.label.length > 10
                      ? `${b.label.slice(0, 20)}...`
                      : b.label}
                  </a>
                </span>
              ))}
            </div>
          )
        }
      </nav>
    </header>

    <slot />

    <div class="footer-wrapper pt-15">
      <div class="w-full overflow-hidden opacity-80">
        <svg
          transition:name="bear-icon"
          viewBox="0 0 1440 90"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          class="h-auto w-full"
          preserveAspectRatio="xMidYMax meet"
        >
          {/* <!-- Pixel art grass --> */}
          {/* <!-- Base layer of grass --> */}
          <rect x="0" y="70" width="1440" height="20" fill="#3A5F0B"></rect>
          {/* Dark green base */}
          <rect x="0" y="60" width="1440" height="10" fill="#5C8A4F"></rect>
          {/* Mid green */}

          {/* <!-- Pixelated blades of grass --> */}
          {
            Array.from({ length: 1440 / 10 }).map((_, i) => {
              const xBase = i * 10;
              const bladeHeight = Math.random() * 30 + 20; // Random height between 20 and 50
              const topY = 70 - bladeHeight;
              const color1 = Math.random() > 0.5 ? "#6B9A5F" : "#7DB86C"; // Lighter green shades
              const color2 = Math.random() > 0.3 ? "#5C8A4F" : "#4A7040"; // Mid/Darker green shades

              return (
                <>
                  {/* <!-- Main blade part --> */}
                  <rect
                    x={xBase + 2}
                    y={topY}
                    width="6"
                    height={bladeHeight}
                    fill={color1}
                  />
                  {/* <!-- Shadow/variation part of blade --> */}
                  <rect
                    x={xBase}
                    y={topY + bladeHeight * 0.3}
                    width="2"
                    height={bladeHeight * 0.7}
                    fill={color2}
                  />
                  <rect
                    x={xBase + 8}
                    y={topY + bladeHeight * 0.4}
                    width="2"
                    height={bladeHeight * 0.6}
                    fill={color2}
                  />

                  {/* <!-- Tip pixel --> */}
                  <rect
                    x={xBase + 4}
                    y={topY - 5 > 0 ? topY - 5 : 0}
                    width="2"
                    height="5"
                    fill={color1}
                  />

                  {/* <!-- Occasional taller "pixel" blades --> */}
                  {Math.random() > 0.8 && (
                    <rect
                      x={xBase + Math.floor(Math.random() * 3) * 2}
                      y={topY - 10 > 0 ? topY - 10 : 0}
                      width="2"
                      height={Math.random() * 5 + 5}
                      fill={color1}
                    />
                  )}
                </>
              );
            })
          }

          {/* <!-- Add some "plant" like pixel structures --> */}
          {
            Array.from({ length: 1440 / 80 }).map((_, i) => {
              const xBase = i * 80 + Math.random() * 20;
              const plantBaseY = 50;
              const darkPlantColor = "#3A5F0B";
              const lightPlantColor = "#5C8A4F";
              return (
                <>
                  {/* <!-- Stem --> */}
                  <rect
                    x={xBase + 8}
                    y={plantBaseY - 20}
                    width="4"
                    height="20"
                    fill={darkPlantColor}
                  />
                  {/* <!-- Leaves --> */}
                  <rect
                    x={xBase}
                    y={plantBaseY - 15}
                    width="8"
                    height="4"
                    fill={lightPlantColor}
                  />
                  <rect
                    x={xBase + 12}
                    y={plantBaseY - 15}
                    width="8"
                    height="4"
                    fill={lightPlantColor}
                  />
                  <rect
                    x={xBase + 4}
                    y={plantBaseY - 25}
                    width="12"
                    height="4"
                    fill={lightPlantColor}
                  />
                  <rect
                    x={xBase + 6}
                    y={plantBaseY - 30}
                    width="8"
                    height="5"
                    fill={darkPlantColor}
                  />
                </>
              );
            })
          }
        </svg>
      </div>
      <footer class="footer rounded p-2 bg-orange-950 opacity-75 t-10">
        <div class="max-w-2xl mx-auto px-5 py-3 md:px-0">
          <section class="flex items-center">
            <img
              loading="lazy"
              src="https://cdn.bsky.app/img/avatar/plain/did:plc:yiq6xbxnjzcsxipd3qq3r2hv/bafkreify73ikrqasx3zdusnarp6qrx3b2b2zpy2ixhgklfnj5oqyrvizge@jpeg"
              class="float-left mr-5 aspect-square w-16 rounded-full"
            />
            <p>
              {bio}
            </p>
          </section>
          <section class="pt-5">
            <p>
              <a
                class="link hover:opacity-75 hover:italic"
                href="https://github.com/chiubaca"
              >
                GitHub</a
              >
              <span>/</span>
              <a
                class="link hover:opacity-75 hover:italic"
                href="https://bsky.app/profile/chiubaca.com"
              >
                Bluesky
              </a>
              <span>/</span>
              <a
                class="link hover:opacity-75 hover:italic"
                href="https://mas.to/@chiubaca"
              >
                Mastodon</a
              >
              <span>/</span>
              <a
                class="link hover:opacity-75 hover:italic"
                href="https://www.linkedin.com/in/achiu1/"
              >
                LinkedIn</a
              >
              <span>/</span>
              <a
                class="link hover:opacity-75 hover:italic"
                href="https://twitter.com/chiubaca"
              >
                X (Twitter)</a
              >
            </p>
          </section>
        </div>
      </footer>
    </div>
  </body>
</html>

<style>
  body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }

  .footer-wrapper {
    margin-top: auto;
  }
</style>

<script>
  (function () {
    window.counterscale = {
      q: [["set", "siteId", "chiubaca-com"], ["trackPageview"]],
    };
  })();
</script>

<script
  id="counterscale-script"
  src="https://counterscale.chiubaca.workers.dev/tracker.js"
  defer></script>
