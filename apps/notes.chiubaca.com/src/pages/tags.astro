---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import { NoteTypes } from "@shared/types";

type Note = {
  collection: string;
  slug: string;
  tags: string[];
};
const collections: NoteTypes[] = [
  "fleeting-notes",
  "literature-notes",
  "permanent-notes",
];

const collectionPromise = collections.map(async (collectionName) => {
  const collection = await getCollection(collectionName);

  return collection.map((note) => ({
    collection: note.collection,
    slug: note.slug,
    tags: note.data.tags,
  }));
});

const notesByCollection = await Promise.all(collectionPromise);

const flattenedNotes = notesByCollection.flat();

type NotesGroupedByTag = {
  tag: string;
  notes: Note[];
};

function groupNotesByTag(notes: Note[]): NotesGroupedByTag[] {
  const taggedNotes: { [key: string]: Note[] } = {};

  notes.forEach((note) => {
    note.tags.forEach((tag) => {
      if (!taggedNotes[tag]) {
        taggedNotes[tag] = [];
      }
      taggedNotes[tag].push(note);
    });
  });

  return Object.keys(taggedNotes).map((tag) => {
    return {
      tag,
      notes: taggedNotes[tag],
    };
  });
}

const indexedNotes = groupNotesByTag(flattenedNotes);
---

<BaseLayout>
  Indexed Notes

  <main class="">
    {
      indexedNotes.map((tag) => {
        return (
          <div class="">
            <h2 class="text-2xl py-2"> {tag.tag}</h2>
            <ul>
              {tag.notes.map((note) => {
                return (
                  <a
                    class="hover:link hover:link-underline"
                    href={`/${note.collection}/${note.slug}`}
                  >
                    <li> {note.slug} </li>
                  </a>
                );
              })}
            </ul>
          </div>
        );
      })
    }
  </main>
</BaseLayout>
