---
import { getCollection } from "astro:content";

import NotePage from "../layouts/NotePage.astro";
import ListingPage from "../layouts/ListingPage.astro";
import FleetingNotesListingPage from "../layouts/FleetingNotesListingPage.astro";

import { noteTypes, type AllPaths, NoteTypes } from "@shared/types";

type Route = {
  params: { noteRoute: AllPaths };
};

export async function getStaticPaths() {
  const noteTypeTitles = Object.values(noteTypes.enum).map(
    (noteType) => noteType,
  );

  const makeAllRoutes = noteTypeTitles.map(async (noteType) => {
    const notes = await getCollection(noteType);

    const noteTypePaths = notes.map(
      (note) => `${noteType}/${note.slug}` as const,
    );

    return noteTypePaths;
  });

  const allRoutes = await Promise.all(makeAllRoutes);

  const slugPaths: Route[] = allRoutes
    .flat()
    .map((path) => ({ params: { noteRoute: path } }));

  const indexPaths: Route[] = noteTypeTitles.map((noteType) => ({
    params: { noteRoute: noteType },
  }));

  return [...indexPaths, ...slugPaths];
}

const { noteRoute } = Astro.params;

const LISTING_PAGE_COMPONENT_LOOKUP: Record<NoteTypes, any> = {
  "fleeting-notes": FleetingNotesListingPage,
  "literature-notes": ListingPage,
  "permanent-notes": ListingPage,
};

function routeHandler(noteRoute: AllPaths) {
  // return the listing page component if we have a match
  if (LISTING_PAGE_COMPONENT_LOOKUP[noteRoute]) {
    return { PageComponent: LISTING_PAGE_COMPONENT_LOOKUP[noteRoute] };
  }
  // otherwise we're on a slug page e.g /fleeting-notes/01-01-2023
  // so render a single Note.
  return { PageComponent: NotePage };
}

const { PageComponent } = routeHandler(noteRoute);
---

<PageComponent path={noteRoute} />
