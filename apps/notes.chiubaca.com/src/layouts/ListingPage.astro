---
import { getCollection } from "astro:content";
import type { NoteTypes } from "@shared/types";
import MainLayout from "./MainLayout.astro";

interface Props {
  path: Exclude<NoteTypes, "fleeting-notes">;
}

const { path } = Astro.props;

const noteCollection = await getCollection(path);

const notesSortedByLastUpdated = noteCollection.sort(
  (a, b) =>
    new Date(b.data.last_updated).getTime() -
    new Date(a.data.last_updated).getTime(),
);
---

<MainLayout
  title={path}
  breadcrumbs={[
    {
      href: "/",
      label: "/ notes",
    },
    {
      href: path,
      label: `/ ${path.split("-")[0]}`,
    },
  ]}
>
  <main class="flex flex-col gap-5">
    {
      notesSortedByLastUpdated.map((note) => {
        return (
          <div class="center flex flex-col ">
            <h2 class="flex gap-2 align-middle">
              <a
                class="link-hover link "
                href={`/${note.collection}/${note.slug}`}
              >
                <span class="font-bold">{note.data.title}</span>
              </a>
            </h2>
            <div>
              {note.data.status === "live" && (
                <div class="badge badge-success">live</div>
              )}
              <span class="italic">
                updated {note.data.last_updated.toDateString()}{" "}
              </span>
            </div>
          </div>
        );
      })
    }
  </main>
</MainLayout>
