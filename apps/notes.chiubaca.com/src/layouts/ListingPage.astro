---
import { getCollection } from "astro:content";
import type { NoteTypes } from "@shared/types";
import MainLayout from "./MainLayout.astro";

interface Props {
  path: Exclude<NoteTypes, "fleeting-notes">;
}

const { path } = Astro.props;

const noteCollection = await getCollection(path);

const notesSortedByLastUpdated = noteCollection.sort(
  (a, b) =>
    new Date(b.data.last_updated).getTime() -
    new Date(a.data.last_updated).getTime(),
);
---

<MainLayout
  title={path}
  breadcrumbs={[
    {
      href: "/",
      label: "/ notes",
    },
    {
      href: path,
      label: `/ ${path.split("-")[0]}`,
    },
  ]}
>
  <main class="flex flex-col gap-2">
    {
      notesSortedByLastUpdated.map((note) => {
        return (
          <h2>
            <a
              class="link-hover link "
              href={`/${note.collection}/${note.slug}`}
            >
              <span class="font-bold">{note.data.title}</span>
            </a>
            <span class="italic text-info-content">
              - updated {new Date(note.data.last_updated).toDateString()}
            </span>

            {note.data.status === "live" && (
              <span class="badge badge-success"> live </span>
            )}
          </h2>
        );
      })
    }
  </main>
</MainLayout>
